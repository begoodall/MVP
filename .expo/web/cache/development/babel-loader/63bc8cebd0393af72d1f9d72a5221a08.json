{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/briangoodall/Documents/work/HackReactor/Immersive/MVP2/formspaces/app/screens/create/FormSpecificScreen.js\";\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { dashStyles } from \"../styles.js\";\nimport { dumForm1Data } from \"../../../dummydata.js\";\nexport var FormSpecificScreen = function FormSpecificScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var handleUnsubmitted = function handleUnsubmitted() {\n    return Alert.alert(\"Form not submitted\", \"Send reminder?\", [{\n      text: \"Send\",\n      onPress: function onPress() {\n        return submittedAlert();\n      }\n    }, {\n      text: \"Cancel\",\n      style: \"cancel\"\n    }]);\n  };\n\n  var submittedAlert = function submittedAlert() {\n    return Alert.alert(\"Reminder sent!\");\n  };\n\n  var handleNamePress = function handleNamePress() {\n    return navigation.navigate('FormResponseScreen');\n  };\n\n  var renderTeamMembers = function renderTeamMembers(_ref2) {\n    var item = _ref2.item;\n    var fill = 'rgba(129, 179, 106, 0.8)';\n    var formReaction = handleNamePress;\n\n    if (!item.complete) {\n      fill = 'transparent';\n      formReaction = handleUnsubmitted;\n    }\n\n    return React.createElement(TouchableOpacity, {\n      onPress: formReaction,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: dashStyles.listItemView,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: dashStyles.listItemText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, item.firstName, \" \", item.lastName.substring(0, 1), \".\"), React.createElement(View, {\n      style: {\n        height: 20,\n        width: 20,\n        backgroundColor: fill,\n        borderColor: '#81B26ACC',\n        borderWidth: 1.8,\n        borderRadius: 50,\n        alignSelf: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: dashStyles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: dashStyles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, dumForm1Data.formName), React.createElement(View, {\n    style: dashStyles.list,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    style: dashStyles.list,\n    data: dumForm1Data.teamMembers,\n    keyExtractor: dumForm1Data.teamMembers.id,\n    renderItem: renderTeamMembers,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/briangoodall/Documents/work/HackReactor/Immersive/MVP2/formspaces/app/screens/create/FormSpecificScreen.js"],"names":["React","dashStyles","dumForm1Data","FormSpecificScreen","navigation","route","handleUnsubmitted","Alert","alert","text","onPress","submittedAlert","style","handleNamePress","navigate","renderTeamMembers","item","fill","formReaction","complete","listItemView","listItemText","firstName","lastName","substring","height","width","backgroundColor","borderColor","borderWidth","borderRadius","alignSelf","container","title","formName","list","teamMembers","id"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Text, SafeAreaView, View, Button, TextInput, TouchableOpacity, FlatList, StyleSheet, Alert } from 'react-native'\nimport { dashStyles } from '../styles.js';\nimport { dumForm1Data } from '../../../dummydata.js';\n\nexport const FormSpecificScreen = ({ navigation, route }) => {\n  const handleUnsubmitted = () =>\n  Alert.alert(\n    \"Form not submitted\",\n    \"Send reminder?\",\n    [\n      {\n        text: \"Send\",\n        onPress: () => submittedAlert(),\n      },\n      { text: \"Cancel\", style: \"cancel\" }\n    ]\n  );\n  const submittedAlert = () =>\n  Alert.alert(\n    \"Reminder sent!\"\n  );\n  const handleNamePress = () => navigation.navigate('FormResponseScreen');\n  const renderTeamMembers = ({ item }) => {\n    let fill = 'rgba(129, 179, 106, 0.8)';\n    let formReaction = handleNamePress;\n    if (!item.complete) {\n      fill = 'transparent'\n      formReaction = handleUnsubmitted;\n    }\n\n    return (\n      <TouchableOpacity onPress={formReaction}>\n        <View style={dashStyles.listItemView}>\n          <Text style={dashStyles.listItemText}>{item.firstName} {item.lastName.substring(0, 1)}.</Text>\n          <View style={\n            {\n            height: 20,\n            width: 20,\n            backgroundColor: fill,\n            borderColor: '#81B26ACC',\n            borderWidth: 1.8,\n            borderRadius: 50,\n            alignSelf: 'center'\n            }\n          }>\n          </View>\n        </View>\n      </TouchableOpacity>\n    );\n  }\n\n  return (\n    <SafeAreaView style={dashStyles.container}>\n      <Text style={dashStyles.title}>{dumForm1Data.formName}</Text>\n      <View style={dashStyles.list}>\n        <FlatList\n          style={dashStyles.list}\n          data={dumForm1Data.teamMembers}\n          keyExtractor={dumForm1Data.teamMembers.id}\n          renderItem={renderTeamMembers}\n        />\n      </View>\n\n    </SafeAreaView>\n  )\n};"]},"metadata":{},"sourceType":"module"}